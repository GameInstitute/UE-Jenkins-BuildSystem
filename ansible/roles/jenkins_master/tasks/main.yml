---
- name: Install Docker
  include_role:
    name: angstwad.docker_ubuntu
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  when: (not local_docker_host) and install_docker

- name: Install rsync
  apt:
    name: rsync
  when: (not local_docker_host) and install_rsync

- name: Set docker host paths
  set_fact: |
    docker_host__mounts_location="{{ local_host__mounts_location if local_docker_host else remote_host__mounts_location }}"
    docker_host__docker_compose_location="{{ local_host__docker_compose_location if local_docker_host else remote_host__docker_compose_location }}"

- name: Stop jenkins-master container
  docker_compose:
    project_src: "{{ docker_host__docker_compose_location }}"
    files: "{{ docker_compose_files }}"
    state: absent
  environment:
    "{{ docker_compose_environment_variables }}"
  when:
    stop_container

- name: Deploy config files
  synchronize:
    src: "{{ local_host__mounts_location }}/"
    dest: "{{ remote_host__mounts_location }}/"
    recursive: yes
    delete: yes
  when:
    (not local_docker_host) and deploy_config
    
- name: Deploy Docker Compose files
  synchronize:
    src: "{{ local_host__docker_compose_location }}/"
    dest: "{{ remote_host__docker_compose_location }}/"
    recursive: yes
    delete: yes
  when:
    (not local_docker_host) and deploy_docker_compose

- name: Configure docker to authenticate against Google Artifact Registry
  shell: echo "Y" | gcloud auth configure-docker {{ artifact_registry_location }}-docker.pkg.dev
  when:
    (not local_docker_host) and start_container

- name: Start jenkins-master container (with restart if already running)
  docker_compose:
    project_src: "{{ docker_host__docker_compose_location }}"
    files: "{{ docker_compose_files }}"
    restarted: yes
  environment:
    "{{ docker_compose_environment_variables }}"
  when:
    start_container